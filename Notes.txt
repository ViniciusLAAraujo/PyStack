Things to focus that PDF is not super clear about
Class 1
>before url for users
setting.py add users to INSTALLED_APPS
import include in django urls
>add import os to settings and and inside the templates>dirs add the smart pathing 
os.path.join.....
>create folder tempaltes in the users app
>create template folder in base dir, then static, then separete in folders for apps, finally separate the types (js,css,html,img,gif,....)
>remenber to add {%  csrf_token %} to posts in html files
>python manage.py migrate
>from django.contrib.auth.models import User
>import messagens in setting.py
>add messages template above the register in html
>add url for login in users app
>add new view in users app
>add template to login, and configure action in form
>add login logic
>from django.shortcuts import redirect
>add logout to users app urls
>add lougut function to views 
>add check to see if user is logged in login and register functions
Class 2
>install the new publish app in settings.py
>after setting up race use migrate to move model into transfer area and then makemigrations to create the tables
>setting up adm > manage.py createsuperuser > creat name and password
>inside publish create the templates folder and put new_pet.html
>inside base templates insert new_pet.css
>import from .models, into publish views so they're useable 
>import the configs for the media files into the main urls.py
>create url path to you_pets in pyblish, then create the html template as well
>create the css file for you_pets in the base template folder into the static files
>add path to remove_pet into publish urls
>remember to import redirect from django.shortcuts when creating the remove_pet in views
>add reference to the remove button in your_pets
>put pet owners verification befora the delition 
>include new adopt app into settings INSTALED_APPS after you strated it with manage
>include adopt url to main app urls.py
>create template folder and file for list_pet
>send races to list pets {'pets': pets,'racas':racas} in render
>put the template for and the action for the form inlist_pets
>send city to so gilter does not reset all the time (remember to add the template to the text box ass well)
Class 3
>create lookup_pet html template into adopt's templates folder
>redirect the image in list_pets to the lookup_pet url via template
>create AskForAdoption model in adopt app
>import User from contrib auth models and Pet from publish app models
> when creating the AskFroAdoption view remember to import messages and it`s constants, import datetime, import shorcuts redirect, and the model AskFroAdoption from this on app
>remember to add the @loginrequired to all views that are not in the Users app (from auth.decorators)
>add see_adoptions url, view, and html template to publish app
>do real mails later, for now add EMAIL_BACKEND to settings
>create the url, nad view for processing adoptions into adopt app
>make the references in see_adoptions for these processing
>remember to register the model from other apps in their admin.py (AskForAdoption in adopt app for instance)
>make the toString/__str__ func to the AskForAdoption model
>change pet satatus and owner later
>add dashboard urlmview and html template to publish app
>add api adoption per race to url and views in publish app
>crsf_exempt to bypass, so it can be more easly consume as api (also from django.http import JsonResponse)
>add js script to static file, and chage the label there
